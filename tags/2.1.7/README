$Id$
$Log$
Revision 1.1  2004/05/30 14:43:11  heller
Standard top-level text files


The Deepwoods Software Model Railroad System contains several parts, most of
can be used independently or with other pieces of software.

Right now (Sun May 30 09:34:30 2004) it contains several complete (but
not necessarily finished!) programs:

	1) A port of Tim O'Conner's older Freight Car Forwarding system,
	   written entirely in Tcl/Tk -- it is completely cross-platform.

	2) A Working Time Table creation program, also completely in
	   Tcl/Tk (but it needs LaTeX installed to format the Time
	   Tables). 

	3) A pair scripts for computing focal distances, view area, and
	   scaling when taking pictures, also completely in Tcl/Tk.

	4) A program for computing resistor values, also completely in
	   Tcl/Tk. 


There is a master main program that can run some of these programs as
sub-windows.  This program is still very much still in development.

There are some other bits and pieces:

	There is a C++ module with a Tcl interface that will parse a
XTrakCad layout file and create a graph data structure of the layout. 
I am not sure how useful this will be -- I wanted to 'automate' the
process of constructing a layout schematic (for (software) CTC panel
displays).  I have not figured out how to do this yet.  This is built
only for Linux, but should be compilable for other UNIX systems,
MS-Windows, or MacOS.

	There is a C++ module with a Tcl interface for talking to C/MRI
nodes via a serial port (RS232).  This is working and includes a version
of the Universal Test Program in Tcl/Tk.  Right now, this is Linux only.
Porting to other UNIXes, MS-Windows, or MacOS would be somewhat
non-trivial, since the low-level serial port code is not cross-platform
(this is in the nature of this sort of code).

	There are a collection of Tcl/Tk script modules that provide
various support for different things, including:

	1) StdMenuBar -- creates and manages a standardized menu bar (the
menus across the top of main windows), with the basic standard menus
(File, Edit, View, Options, and Help), with the File, Edit, and Help
menus populated with the Motif standard items.

	2) A start for a 'LCARS' widget set.  LCARS is what is used on
Star Trek touch control panels since STNG -- one of the things I am
considering is using touch screens to operate my Model RR and it might
be cool to create a control panel that has the look-and-feel of STNG.

	3) A connection of (diesel) locomotive instrument widgets, both
analog (for older, vintage locomotives) and digital (more modern
locomotives).  These would be used in conjunction with a virtual
'windshield' using a networked loco camera with some sort of special
purpose (or re-purposed) 'laptop' control desk.

	4) A CTC panel widget, which includes both a schematic display
and a control panel (with CTC levers, code buttons, random toggle
switches and assorted indicator lamps).

The directory structure is pretty straight forward:

All of the C++ code lives under C++, all of the Tcl code lives under
Scripts, all of the on-line help is under Help and all of the 'printed'
documentation is under Doc.  Under the C++ directory are directories for
the C/MRI module (with its own SWIG interface module), the XTrakCad
parser, the classes for the layout graph and the common SWIG interface
module.  Under the Scripts directory are directories for each of the
main modules, as well as directories for the various support packages. 
Under the Doc directory are directories for the User and Internals
manuals, plus a support directory.
